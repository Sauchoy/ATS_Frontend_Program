
package java_system;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZoneId;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.UIManager.getInt;
import static javax.swing.UIManager.getString;
import javax.swing.table.DefaultTableModel;

/**
 * This page has the outstanding tickets table and shows the price that the customer has to pay for that ticket, they have option to pay by card or by cash.
 */
public class RecordPayment extends javax.swing.JFrame {
    
    int mousepX;
    int mousepY;

    /** Creates new form RecordPayment.
     * ZoneId.of methods takes the current time, date and sets sate into a string format.
     */
    
     ZoneId z = ZoneId.of("Europe/London"); 
    LocalDate dayToday = LocalDate.now(z); 
    LocalTime timeToday = LocalTime.now(z); 
    String currentTime = timeToday.toString(); 
    String currentDate = dayToday.toString(); 
    SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
    
    /** Runs method doClick() to TableButton when RecordPayment is displayed.
     * 
     */
    public RecordPayment() {
        initComponents();
        TableButton.doClick();
    }

    /**
     * 
     * @param staffID sets staffID to StaffIDLabel to be displayed on RecordPayment page.
     * @param firstName sets firstName to StaffNameLabel to be displayed on RecordPayment page.
     * @param role  sets role to StaffRoleLabel to be displayed on RecordPayment page.
     */
      public RecordPayment(String staffID,String firstName, String role) {
        initComponents();
        StaffIDLable.setText(staffID);
        StaffNameLable.setText(firstName);
        StaffRoleLable.setText(role);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        CardPaymentName = new javax.swing.JLabel();
        CardNameField = new javax.swing.JTextField();
        CardPaymentSurname = new javax.swing.JLabel();
        CardSurnameField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        CardNumberField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        CardCVVField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        CardAmountField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        CardPaymentRecordPaymentButton = new javax.swing.JButton();
        CardTypeComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        CardComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        CardTicketIDField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        TitleCardComboBox = new javax.swing.JComboBox<>();
        ExpMonthComboBox = new javax.swing.JComboBox<>();
        CardExpYearField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        CashAmountField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        CashNameField = new javax.swing.JTextField();
        CashSurnameField = new javax.swing.JTextField();
        CashRecordPaymetButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        CashComboBox = new javax.swing.JComboBox<>();
        CashTicketIDField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        TitleCashComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        paymentTable = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        TableButton = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel28 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        StaffNameLable = new javax.swing.JLabel();
        StaffIDLable = new javax.swing.JLabel();
        StaffRoleLable = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(238, 238, 238));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(62, 112, 165));

        CardPaymentName.setForeground(java.awt.Color.white);
        CardPaymentName.setText("Name:");

        CardPaymentSurname.setForeground(java.awt.Color.white);
        CardPaymentSurname.setText("Surname:");

        CardSurnameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CardSurnameFieldActionPerformed(evt);
            }
        });

        jLabel4.setForeground(java.awt.Color.white);
        jLabel4.setText("Card Number:");

        jLabel5.setForeground(java.awt.Color.white);
        jLabel5.setText("CVV:");

        jLabel6.setForeground(java.awt.Color.white);
        jLabel6.setText("Amount:");

        jLabel7.setForeground(java.awt.Color.white);
        jLabel7.setText("ExpDate:");

        CardPaymentRecordPaymentButton.setText("Record Payment");
        CardPaymentRecordPaymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CardPaymentRecordPaymentButtonActionPerformed(evt);
            }
        });

        CardTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "VISA", "MASTER CARD" }));

        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("Card Type");

        CardComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "USD", "Local Currency" }));

        jLabel3.setForeground(java.awt.Color.white);
        jLabel3.setText("Card Payment");

        CardTicketIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CardTicketIDFieldActionPerformed(evt);
            }
        });

        jLabel14.setForeground(java.awt.Color.white);
        jLabel14.setText("Ticket ID:");

        TitleCardComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr", "Ms" }));

        ExpMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(CardPaymentRecordPaymentButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(ExpMonthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(CardExpYearField, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(CardPaymentSurname, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(CardSurnameField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(CardNumberField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(CardCVVField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(CardTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                            .addComponent(CardAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(CardComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(CardTicketIDField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(TitleCardComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CardNameField)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(CardPaymentName)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(63, 63, 63))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(21, 21, 21)
                .addComponent(CardPaymentName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CardNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TitleCardComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CardPaymentSurname)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CardSurnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CardTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CardNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CardCVVField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CardComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CardAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ExpMonthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CardExpYearField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CardTicketIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(CardPaymentRecordPaymentButton)
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 39, 238, 530));

        jPanel3.setBackground(new java.awt.Color(62, 112, 165));

        jLabel10.setForeground(java.awt.Color.white);
        jLabel10.setText("Amount:");

        jLabel8.setForeground(java.awt.Color.white);
        jLabel8.setText("Name:");

        jLabel9.setForeground(java.awt.Color.white);
        jLabel9.setText("Surname:");

        CashSurnameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashSurnameFieldActionPerformed(evt);
            }
        });

        CashRecordPaymetButton.setText("Record Payment");
        CashRecordPaymetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashRecordPaymetButtonActionPerformed(evt);
            }
        });

        jLabel12.setForeground(java.awt.Color.white);
        jLabel12.setText("Cash Payment");

        CashComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "USD", "Local Currency" }));

        CashTicketIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashTicketIDFieldActionPerformed(evt);
            }
        });

        jLabel13.setForeground(java.awt.Color.white);
        jLabel13.setText("Ticket ID:");

        TitleCashComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr", "Ms" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(CashTicketIDField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(CashSurnameField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(CashAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(CashComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(TitleCashComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addComponent(CashNameField))))
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addComponent(jLabel13))
                .addGap(0, 21, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jLabel12))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(CashRecordPaymetButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel12)
                .addGap(12, 12, 12)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CashNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TitleCashComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CashSurnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CashAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CashComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CashTicketIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(CashRecordPaymetButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 39, -1, -1));

        paymentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "Ticket ID", "Status", "Customer Name", "Customer Surname", "Amount", "Amount Paid"
            }
        ));
        jScrollPane1.setViewportView(paymentTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 40, 690, 361));

        jLabel15.setText("Paymet Table:");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, -1, -1));

        TableButton.setText("Update Table");
        TableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TableButtonActionPerformed(evt);
            }
        });
        jPanel1.add(TableButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 400, 690, -1));

        jLabel30.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(41, 76, 113));
        jLabel30.setText("X");
        jLabel30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel30MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 0, 20, -1));

        jLabel1.setForeground(java.awt.Color.black);
        jLabel1.setText("Record Payment");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 0, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 1230, 590));

        jPanel4.setBackground(new java.awt.Color(41, 76, 113));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel4.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 190, 10));

        jLabel28.setForeground(java.awt.Color.white);
        jLabel28.setText("Role:");
        jPanel4.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 31, -1));

        jLabel18.setForeground(java.awt.Color.white);
        jLabel18.setText("Staff ID:");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jLabel27.setForeground(java.awt.Color.white);
        jLabel27.setText("Name:");
        jPanel4.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        StaffNameLable.setForeground(java.awt.Color.white);
        StaffNameLable.setText("jLabel9");
        jPanel4.add(StaffNameLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, -1, -1));

        StaffIDLable.setForeground(java.awt.Color.white);
        StaffIDLable.setText("jLabel8");
        jPanel4.add(StaffIDLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, -1, -1));

        StaffRoleLable.setForeground(java.awt.Color.white);
        StaffRoleLable.setText("jLabel9");
        jPanel4.add(StaffRoleLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, -1, -1));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Travel Advisor");
        jPanel4.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 190, -1));

        jPanel5.setBackground(new java.awt.Color(252, 68, 69));
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel5MouseExited(evt);
            }
        });

        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Log Out");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jLabel32)
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        jPanel4.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 210, 40));

        jPanel6.setBackground(new java.awt.Color(54, 97, 144));
        jPanel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel6MouseExited(evt);
            }
        });

        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Home");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(jLabel20)
                .addContainerGap(88, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, -1, -1));

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 580));

        jPanel14.setBackground(new java.awt.Color(238, 238, 238));
        jPanel14.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel14MouseDragged(evt);
            }
        });
        jPanel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel14MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1440, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1440, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CardSurnameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CardSurnameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CardSurnameFieldActionPerformed

    private void CashSurnameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashSurnameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CashSurnameFieldActionPerformed

    /** When JButton is pressed, all textfield and combo box that is filled in by user are inserted into 
     * paymentdetails table, this is for when the payment is card.
     * 
     * @param evt 
     */
    private void CardPaymentRecordPaymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CardPaymentRecordPaymentButtonActionPerformed
        // TODO add your handling code here:
      String fname=CardNameField.getText();
      String lname=CardSurnameField.getText();
          
      String currency=String.valueOf(CardComboBox.getSelectedItem());
      String cardType=String.valueOf(CardTypeComboBox.getSelectedItem());
      String title=String.valueOf(TitleCardComboBox.getSelectedItem());
      String month=String.valueOf(ExpMonthComboBox.getSelectedItem());
       String expYear=CardExpYearField.getText();
        // geting varibles for integers
        Float camount= Float.parseFloat(CardAmountField.getText());
        String cardNumber= CardNumberField.getText();
        int ticketID= Integer.parseInt(CardTicketIDField.getText());
        int CVV= Integer.parseInt(CardCVVField.getText());
        
       //seting database link and which action to do
        if(checkThePrice(camount,ticketID)){
       Connection con=null;
       PreparedStatement ps;
       String query="INSERT INTO `paymentdetails`(`transactionID`, `customerID`, `tickedID`,blankID, `title`, `firstName`, `lastName`, `paymentType`, `currency`, `amount`, `paymentDate`, `cardType`, `cardNumber`, `ExpiryDate`, `CVV`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
     try{
         con=MyConnection.getConnection();
         con.setAutoCommit(false);
         ps=con.prepareStatement(query);
         
         ps.setInt(1,(int) (Math.random() * ( 9999 - 1000 )));
         ps.setInt(2,customerID(ticketID));
         ps.setInt(3,ticketID);
         ps.setString(4, getBlankID(ticketID));
         ps.setString(5,title);
         ps.setString(6,fname);
         ps.setString(7,lname);
         ps.setString(8,"Card");
         ps.setString(9,currency);
         ps.setFloat(10,camount);
         ps.setString(11,currentDate);
         ps.setString(12,cardType);
         ps.setString(13,cardNumber);
         ps.setString(14,month+"/"+expYear);
         ps.setInt(15,CVV);
         
         
         updatePayment(camount,ticketID);
         updateCustomerOustandingTickets(customerID(ticketID));
         con.setAutoCommit(true);
         if(ps.executeUpdate()>0){
             JOptionPane.showMessageDialog(null,"Customer Payment Recorded");
             con.close();
             System.out.println("Close Connection");
         }
         
     }catch (SQLException ex){
         Logger.getLogger(RecordPayment.class.getName()).log(Level.SEVERE,null,ex);
         
     }
        }
    }//GEN-LAST:event_CardPaymentRecordPaymentButtonActionPerformed

    /** When JButton is pressed, all textfield and combo box that is filled in by user are inserted into 
     * paymentdetails table. This is for when the payment is cash.
     */
    private void CashRecordPaymetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashRecordPaymetButtonActionPerformed
        

        String fname=CashNameField.getText();
        String lname=CashSurnameField.getText();
          
        String currency=String.valueOf(CashComboBox.getSelectedItem());
        String title=String.valueOf(TitleCashComboBox.getSelectedItem());
        // geting varibles for integers
        Float camount= Float.parseFloat(CashAmountField.getText());
        int ticketID= Integer.parseInt(CashTicketIDField.getText());
        //Date Problem fix !!!
       // SimpleDateFormat dateformat= new SimpleDateFormat("yyyy-MM-dd");
       // String  bdate= dateformat.format(CardPaymentDateField.getDate());
        
       if(checkThePrice(camount,ticketID)){
       
       //seting database link and which action to do
       Connection con=null;
       PreparedStatement ps;
       String query="INSERT INTO `paymentdetails`(`transactionID`, `customerID`, `tickedID`,blankID, `title`, `firstName`, `lastName`, `paymentType`, `currency`, `amount`, `paymentDate`, `cardType`, `cardNumber`, `ExpiryDate`, `CVV`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
     try{
         con=MyConnection.getConnection();
         con.setAutoCommit(false);
         ps=con.prepareStatement(query);
         
         ps.setInt(1,(int) (Math.random() * ( 9999 - 1000 )));
         ps.setInt(2,customerID(ticketID));
         ps.setInt(3,ticketID);
         ps.setString(4, getBlankID(ticketID));
         ps.setString(5,title);
         ps.setString(6,fname);
         ps.setString(7,lname);
         ps.setString(8,"Cash");
         ps.setString(9,currency);
         ps.setFloat(10,camount);
         ps.setString(11,currentDate);
         ps.setInt(12,-1);
         ps.setString(13,"-1");
         ps.setString(14,"-1");
         ps.setInt(15,-1);
         
         updatePayment(camount,ticketID);
         updateCustomerOustandingTickets(customerID(ticketID));
         
         con.setAutoCommit(true);
         if(ps.executeUpdate()>0){
             JOptionPane.showMessageDialog(null,"Customer Payment Recorded");
             con.close();
             System.out.println("Close Connection");
         }
         
     }catch (SQLException ex){
         Logger.getLogger(RecordPayment.class.getName()).log(Level.SEVERE,null,ex);
         
     }
       }
    }//GEN-LAST:event_CashRecordPaymetButtonActionPerformed
    /** checkThePrice checks the amount that the user has entered and if it's less than amount then 
     * it will show messages saying it's too low and too high if user entered a number that is greater.
     * 
     * @param camount This is the amount that is from the SQL query that is executed.
     * @param ticketID unique ID which is assigned to every ticket made and inserted into ticketsales table.
     * @return boolean depending on if camount is greater or less than amount
     */
   public boolean checkThePrice(Float camount,Integer ticketID){
         Connection con=null;
        PreparedStatement ps;
         String query="SELECT amount From ticketsales WHERE ticketID="+ticketID;
          Float amount=0.f;
     try{
         con=MyConnection.getConnection();
         System.out.println("Get Connection");
         ps=con.prepareStatement(query);
         ResultSet rs=ps.executeQuery();
         while(rs.next()){
            amount=rs.getFloat("amount");
             
         }  
         con.close();
         System.out.println("Close Connection");
         if(camount<amount){
             JOptionPane.showMessageDialog(null,"Amount entered is too low");
             return false;
         }else if(camount>amount){
             JOptionPane.showMessageDialog(null,"Amount entered is too high");
             return false;
         }else if(camount.equals(amount)){
             return true;
         }
         
         
     }catch(SQLException ex){
         Logger.getLogger(RecordPayment.class.getName()).log(Level.SEVERE,null,ex);
         return false;
     } return false;
   }
    
    
   /** getBlankID executes an SQL query which selects blankID from tickets where the ticketID is
    * equal to the ticketID that the user has entered.
    * 
    * @param ticketID unique ID which is assigned to every ticket made and inserted into ticketsales table.
    * @return blankID 
    */
    public String getBlankID(Integer ticketID){
        Connection con=null;
        PreparedStatement ps;
         String query="SELECT blankID From ticketSales WHERE ticketID="+ticketID;
         String blankID="";
     try{
         con=MyConnection.getConnection();
         System.out.println("Get Connection");
         ps=con.prepareStatement(query);
         ResultSet rs=ps.executeQuery();
         while(rs.next()){
             blankID=rs.getString("blankID");
             
         }  
         
         con.close();
         System.out.println("Close Connection");
         return blankID;
     }catch(SQLException ex){
         Logger.getLogger(RecordPayment.class.getName()).log(Level.SEVERE,null,ex);
         return blankID;
     }
     
    }
    
    /** updatePayment updates textfield which has been edited to the ticketsales table.
     * 
     * @param amount This is entered in the textfield by user which is the updated into ticketsales table.
     * @param ticketID this is the unique ID which is used to identify which ticket is which.
     */
    public void updatePayment(Float amount, Integer ticketID){
        Connection con=null;
        try{
         con=MyConnection.getConnection();
         con.setAutoCommit(false);
         PreparedStatement ps;
         String query="UPDATE blanks, ticketsales SET blanks.status='paid',ticketSales.amountPaid="+amount+", ticketSales.status='paid' WHERE ticketSales.ticketID="+ticketID+" AND blanks.blankID="+getBlankID(ticketID)+";";
         ps=con.prepareStatement(query);
         ps.execute();
         con.setAutoCommit(true);
         con.close();
         System.out.println("Close Connection");
        
    
    
}catch(Exception e){
        JOptionPane.showMessageDialog(this,e);
    }
    }

    /** customerID this executes SQL query which selects customerID from ticketsales table where the ticketID is 
     * equal to the one entered by the user.
     * 
     * @param ticketid  This is the unique ID which is used to identify which ticket is which.
     * @return CustomerID is returned.
     */
    public int customerID(Integer ticketid){
        int customerID=0;
        
       Connection con=null;
       PreparedStatement ps;
       String query="SELECT `customerID` FROM `ticketsales` WHERE ticketID="+ticketid;
       
     try{  
         con=MyConnection.getConnection();
         System.out.println("Get Connection");
         ps=con.prepareStatement(query);
         ResultSet rs=ps.executeQuery();
         while(rs.next()){
            customerID=rs.getInt("customerID");
         }  
         con.close();
         System.out.println("Close Connection");
         
    }                                           
    catch(Exception e){
        JOptionPane.showMessageDialog(this,e);
    }
        
        return customerID;
    }
    
    
    private void CashTicketIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashTicketIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CashTicketIDFieldActionPerformed

    private void CardTicketIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CardTicketIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CardTicketIDFieldActionPerformed

    /** When JButton is pressed, SQL query is executed which selects ticketID, DOB, customerID, amount, amountPaid
     * status, firstName and lastName form the ticket sales and customers and then displayed onto paymentTable.
     * 
     * @param evt 
     */
    private void TableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TableButtonActionPerformed
        // TODO add your handling code here:
       Connection con=null;
       PreparedStatement ps;
       String query="SELECT ticketID, c.DOB, ts.customerID, amount, amountPaid, status, c.firstName, c.lastName FROM customer AS c INNER JOIN ticketsales AS ts WHERE ts.customerID=c.customerID AND amount>amountPaid AND ts.status='sold'";
       
     try{  
         con=MyConnection.getConnection();
         System.out.println("Get Connection");
         ps=con.prepareStatement(query);
         ResultSet rs=ps.executeQuery();
         DefaultTableModel tm=(DefaultTableModel)paymentTable.getModel();
         tm.setRowCount(0); 
         while(rs.next()){
             Object o[]={rs.getInt("customerID"),rs.getInt("ticketID"),rs.getString("status"),rs.getString("c.firstName"),rs.getString("c.lastName"),rs.getFloat("amount"),rs.getFloat("amountPaid")};
             tm.addRow(o);
         }  
         con.close();
         System.out.println("Close Connection");
         
 
    }//GEN-LAST:event_TableButtonActionPerformed
     catch(Exception e){
        JOptionPane.showMessageDialog(this,e);
    }
    }   
    
    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked
        // TODO add your handling code here:
        loginFrame lf = new loginFrame();
        lf.setVisible(true);
        lf.pack();
        lf.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_jPanel5MouseClicked

    private void jPanel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseEntered
        // TODO add your handling code here:
        jPanel5.setBackground(new Color(252, 116, 117));
    }//GEN-LAST:event_jPanel5MouseEntered

    private void jPanel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseExited
        // TODO add your handling code here:
        jPanel5.setBackground(new Color(252,68,69));
    }//GEN-LAST:event_jPanel5MouseExited

    private void jPanel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseClicked
        // TODO add your handling code here:
           if(StaffRoleLable.getText().equals("Travel_Advisor")){
        travelAd ta =new travelAd(StaffIDLable.getText(),
        StaffNameLable.getText(),
        StaffRoleLable.getText());
        ta.setVisible(true);
        ta.pack();
        ta.setLocationRelativeTo(null); //puts in the center of the screen
        this.dispose(); //hides previos page
        }
           else if(StaffRoleLable.getText().equals("Office_Manager")){
               travelAd om = new travelAd(StaffIDLable.getText(),
                StaffNameLable.getText(),
                StaffRoleLable.getText());
                om.setVisible(true);
                this.setVisible(false);
                om.setLocationRelativeTo(null);
           }
           
           
           else{
             systemAdmin admin = new systemAdmin(StaffIDLable.getText(),
        StaffNameLable.getText(),
        StaffRoleLable.getText());
             admin.setVisible(true);
             this.setVisible(false);
             admin.setLocationRelativeTo(null);
        }
    }//GEN-LAST:event_jPanel6MouseClicked

    private void jPanel6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseEntered
        // TODO add your handling code here:
         jPanel6.setBackground(new Color(81, 135, 194));
    }//GEN-LAST:event_jPanel6MouseEntered

    private void jPanel6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseExited
        // TODO add your handling code here:
        jPanel6.setBackground(new Color(54,97,144));
    }//GEN-LAST:event_jPanel6MouseExited

    private void jPanel14MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel14MouseDragged
        int cordX= evt.getXOnScreen();
        int cordY = evt.getYOnScreen();

        this.setLocation(cordX-mousepX, cordY-mousepY);
    }//GEN-LAST:event_jPanel14MouseDragged

    private void jPanel14MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel14MousePressed
        mousepX = evt.getX();
        mousepY = evt.getY();
    }//GEN-LAST:event_jPanel14MousePressed

    private void jLabel30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel30MouseClicked

    
    
    
    /** Updates the amount of outstanding tickets a customer may have.
     * 
     * @param customerID gets customerID to identity what tickets belong to who. 
     */
    public void updateCustomerOustandingTickets(Integer customerID){
    Connection con=null;
    PreparedStatement pst;
    con=MyConnection.getConnection();
    try{  
        con.setAutoCommit(false);
    String query = "update customer set outstandingTicket=outstandingTicket-1 where customerID ='"+customerID+"' ";
            pst = con.prepareStatement(query);
            pst.execute();

            JOptionPane.showMessageDialog(null, "Updated");
            con.setAutoCommit(true);
            con.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecordPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecordPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecordPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecordPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RecordPayment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CardAmountField;
    private javax.swing.JTextField CardCVVField;
    private javax.swing.JComboBox<String> CardComboBox;
    private javax.swing.JTextField CardExpYearField;
    private javax.swing.JTextField CardNameField;
    private javax.swing.JTextField CardNumberField;
    private javax.swing.JLabel CardPaymentName;
    private javax.swing.JButton CardPaymentRecordPaymentButton;
    private javax.swing.JLabel CardPaymentSurname;
    private javax.swing.JTextField CardSurnameField;
    private javax.swing.JTextField CardTicketIDField;
    private javax.swing.JComboBox<String> CardTypeComboBox;
    private javax.swing.JTextField CashAmountField;
    private javax.swing.JComboBox<String> CashComboBox;
    private javax.swing.JTextField CashNameField;
    private javax.swing.JButton CashRecordPaymetButton;
    private javax.swing.JTextField CashSurnameField;
    private javax.swing.JTextField CashTicketIDField;
    private javax.swing.JComboBox<String> ExpMonthComboBox;
    private javax.swing.JLabel StaffIDLable;
    private javax.swing.JLabel StaffNameLable;
    private javax.swing.JLabel StaffRoleLable;
    private javax.swing.JButton TableButton;
    private javax.swing.JComboBox<String> TitleCardComboBox;
    private javax.swing.JComboBox<String> TitleCashComboBox;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable paymentTable;
    // End of variables declaration//GEN-END:variables
}
